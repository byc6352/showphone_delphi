unit uRecvDataControl;

interface
uses
  windows,uOrder,uRecvData,uStr;

function StartRecvDataThread(order:integer):bool;stdcall;
function getPort(order:integer):integer;stdcall;
function getNum(order:integer):integer;stdcall;
procedure initDataServers(repeateIp:ansiString;port_data:integer;hForm:HWND);
implementation
function getPort(order:integer):integer;stdcall;
begin
   case order of
   CMD_SHOT:
     result:=RecvDatas[1].addr.port;
   CMD_CAMERA_CAP_START:
     result:=RecvDatas[2].addr.port;
   CMD_SOUND_CAP_START:
     result:=RecvDatas[3].addr.port;
   else
     result:=RecvDatas[0].addr.port;
   end;
end;
function getNum(order:integer):integer;stdcall;
begin
   result:=0;//数据接收端口；
   case order of
   CMD_SHOT:
     result:=1;
   CMD_CAMERA_CAP_START:
     result:=2;
   else
     result:=0;
   end;
end;
function StartRecvDataThread(order:integer):bool;stdcall;
var
  tID:DWORD;
  num:integer;
  pData:pRecvDataCS;
begin
  result:=true;
  num:=getNum(order);
  if(RecvDatas[num].thread.active)then begin
    //showmessage('系统忙！请点击“清理”按钮');
    result:=false;
    exit;
  end;
  if(TransFilesCS.thread.active)then begin
    //showmessage('正在传输文件！是否要中断传输？！如要中断，请点击“清理”按钮');
    result:=false;
    exit;
  end;
  if(order=CMD_FILE_TRANS)then begin
    TransFilesCS.thread.hThread:=createthread(nil,0,@TransDirThread,@TransFilesCS,0,tID);
    TransFilesCS.thread.threadID:=tID;
    exit;
  end;
  pdata:=@RecvDatas[num];
  RecvDatas[num].thread.hThread:=createthread(nil,0,@RecvDataThread,pdata,0,tID);
  RecvDatas[num].thread.threadID:=tID;
end;

procedure initDataServers(repeateIp:ansiString;port_data:integer;hForm:HWND);
var
  i:integer;
begin
   zeromemory(@RecvDatas,sizeof(RecvDatas));
  for i:=0 to length(RecvDatas)-1 do
  begin
   //dataServers[i].port:=port_order+i;
   RecvDatas[i].thread.threadType:=FRecvDataThread;
   RecvDatas[i].thread.active:=false;
   RecvDatas[i].sendMsg.hform:=hForm;
   RecvDatas[i].sendMsg.msgType:=wm_TransData;
   RecvDatas[i].addr.flg:=0;
   ustr.strcopy(RecvDatas[i].addr.IP,pansichar(repeateIp));
   RecvDatas[i].addr.port:=port_data+i;
   RecvDatas[i].num:=i;
   zeromemory(@RecvDatas[i].buf[0],MAX_BUF);
  end;//for
  zeromemory(@TransFilesCS,sizeof(TransFilesCS));
  TransFilesCS.thread.threadType:=FtransFileThread;
  TransFilesCS.sendMsg.hform:=hForm;
  TransFilesCS.sendMsg.msgType:=wm_TransFile;
  TransFilesCS.addr.flg:=0;
  strcopy(TransFilesCS.addr.IP,pansichar(pansichar));
  TransFilesCS.addr.port:=port_data;
end;

end.
